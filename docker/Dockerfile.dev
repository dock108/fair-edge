# Development Dockerfile for FairEdge
# Supports hot-reloading for both backend and frontend development

FROM python:3.11-slim as backend-dev

# Set environment variables for development
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    DEBUG_MODE=true

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    postgresql-client \
    redis-tools \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install with development tools
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
    watchdog \
    ipdb \
    pytest-cov \
    black \
    flake8

# Create app user (but don't switch to it in dev for easier debugging)
RUN groupadd -r app && useradd -r -g app app

# Create necessary directories
RUN mkdir -p /app/logs /app/celery-data /tmp

# Expose port for development
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command for development (with auto-reload)
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]

# Frontend development stage
FROM node:18-alpine as frontend-dev

WORKDIR /app

# Install development dependencies
RUN apk add --no-cache curl git

# Expose Vite dev server port
EXPOSE 5173

# Health check for frontend
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5173 || exit 1

# Default command for frontend development
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"] 