{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(alembic revision:*)",
      "Bash(alembic check:*)",
      "Bash(python -m pytest --cov=. --cov-report=term-missing --cov-report=html tests/unit/ -v)",
      "Bash(python -m pytest tests/unit/test_core/ -v --tb=short)",
      "Bash(python -m pytest tests/unit/test_core/test_ev_analyzer.py -v --tb=short)",
      "Bash(python:*)",
      "Bash(chmod:*)",
      "Bash(gh workflow:*)",
      "Bash(pre-commit run:*)",
      "Bash(PYTHONPATH=/Users/michaelfuscoletti/Desktop/fair-edge python -c \"from app import app; print(''Import successful'')\")",
      "Bash(PYTHONPATH=. python:*)",
      "Bash(PYTHONPATH=. pytest --version)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_auth.py -v --tb=short -k \"test_\")",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=. pre-commit run pytest-coverage --verbose)",
      "Bash(PYTHONPATH=. pre-commit run --all-files pytest-coverage --verbose)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_auth.py::test_create_jwt_token -v --no-cov)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_ev_analyzer.py::TestEVAnalyzer::test_init -v --no-cov -s)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py -v --no-cov)",
      "Bash(PYTHONPATH=. pre-commit run --all-files black isort trailing-whitespace end-of-file-fixer --verbose)",
      "Bash(PYTHONPATH=. pre-commit run --all-files)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py tests/fixtures/test_fixtures.py -v --cov=. --cov-report=term-missing)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py tests/unit/test_utils/ -v)",
      "Bash(rm:*)",
      "Bash(PYTHONPATH=. pre-commit run --all-files pytest-coverage)",
      "Bash(mv:*)",
      "Bash(PYTHONPATH=. pytest -v)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(swiftlint lint:*)",
      "Bash(PYTHONPATH=. pytest --collect-only tests/unit/test_simple.py)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py tests/unit/test_utils/test_math_utils.py tests/unit/test_core/test_auth.py -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py tests/unit/test_utils/test_math_utils.py -v)",
      "Bash(PYTHONPATH=. pytest --cov=. --cov-fail-under=30 --cov-report=term-missing)",
      "Bash(vulture:*)",
      "Bash(echo)",
      "Bash(sed:*)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-report=term-missing --cov-fail-under=30)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_simple.py tests/unit/test_utils/test_math_utils.py -v --cov=utils/math_utils.py --cov-report=term-missing)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-report=term-missing --cov-fail-under=50 --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-report=term-missing --cov-fail-under=50 --tb=no -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-fail-under=50 --tb=no)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-fail-under=75 --tb=no)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --tb=no -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_auth.py --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_auth.py::TestRoleBasedAccess --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_auth.py::TestBusinessLogicScenarios --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_config.py --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_config.py::TestCacheConfig --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_services/test_redis_cache.py::TestBusinessLogicScenarios::test_cache_failure_recovery --tb=short -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_services/test_redis_cache.py::TestBusinessLogicScenarios::test_cache_failure_recovery --tb=line -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_utils/test_math_utils.py::TestMathUtils::test_validate_conversion_accuracy --tb=short -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_utils/test_math_utils.py::TestMathUtils::test_business_logic_scenarios --tb=short -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_utils/test_math_utils.py::TestMathUtils --tb=line -q)",
      "Bash(PYTHONPATH=. pytest tests/unit/ --cov=. --cov-fail-under=65 --tb=no)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_routes/test_app_main.py::TestAppCreation::test_cors_configuration_development --tb=line -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_routes/test_app_main.py::TestAppCreation::test_cors_configuration_production --tb=line -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_core/test_metrics.py::TestSafeLabel::test_safe_label_type_conversion --tb=line -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_routes/test_admin.py::TestAdminRoutes::test_list_users_basic --tb=short)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_routes/test_admin.py::TestAdminRoutes::test_list_users_basic --tb=short -v)",
      "Bash(PYTHONPATH=. pytest tests/unit/test_routes/test_admin.py::TestAdminRoutes::test_list_users_basic --tb=line -v)",
      "Bash(git add:*)"
    ],
    "deny": []
  }
}
