repos:
  # Custom project-specific checks
  - repo: local
    hooks:
      # Enhanced Python testing
      - id: pytest-coverage
        name: Run tests with 80% coverage requirement
        entry: pytest --cov=. --cov-fail-under=80 --cov-report=term-missing
        language: system
        pass_filenames: false
        files: '\.py$'
      
      # Type checking
      - id: mypy-check
        name: MyPy type checking
        entry: mypy --ignore-missing-imports --no-strict-optional .
        language: system
        files: '\.py$'
        pass_filenames: false
      
      # Code complexity
      - id: radon-complexity
        name: Check code complexity
        entry: radon cc . --min=B --show-complexity
        language: system
        files: '\.py$'
        pass_filenames: false
      
      # Documentation coverage
      - id: interrogate-docs
        name: Check docstring coverage
        entry: interrogate --fail-under=60 .
        language: system
        files: '\.py$'
        pass_filenames: false
      
      # Dead code detection
      - id: vulture-dead-code
        name: Find dead code
        entry: vulture . --min-confidence=80
        language: system
        files: '\.py$'
        pass_filenames: false
        
      # Existing project-specific checks
      - id: no-pandas-numpy
        name: Block pandas/numpy imports
        entry: bash
        args: ['-c', 'if grep -r "import pandas\|import numpy\|from pandas\|from numpy" --include="*.py" .; then echo "❌ pandas/numpy imports detected - these dependencies were removed"; exit 1; fi']
        language: system
        files: '\.py$'
        
      - id: check-app-size
        name: Check app.py size limit
        entry: bash
        args: ['-c', 'lines=$(wc -l < app.py); if [ $lines -gt 800 ]; then echo "❌ app.py has $lines lines (limit: 800) - consider refactoring"; exit 1; fi']
        language: system
        files: '^app\.py$'
        
      - id: no-direct-app-imports
        name: Block direct app imports in routes
        entry: bash
        args: ['-c', 'if grep -r "from app import\|import app" routes/ --include="*.py" 2>/dev/null; then echo "❌ Direct app imports in routes detected - use dependency injection"; exit 1; fi']
        language: system
        files: '^routes/.*\.py$'
        
      - id: check-env-security
        name: Check for committed secrets
        entry: bash
        args: ['-c', 'if [ -f .env ] && ! grep -q "^\.env$" .gitignore; then echo "❌ .env file exists but not in .gitignore"; exit 1; fi']
        language: system
        pass_filenames: false
        
      # iOS Swift quality checks
      - id: swiftlint
        name: SwiftLint
        entry: bash
        args: ['-c', 'if command -v swiftlint >/dev/null 2>&1; then swiftlint lint --strict ios/FairEdge/FairEdge/; else echo "⚠️ SwiftLint not installed, skipping"; fi']
        language: system
        files: '\.swift$'
        
      - id: swift-format-check
        name: Swift Format Check
        entry: bash
        args: ['-c', 'if command -v swift-format >/dev/null 2>&1; then swift-format lint --recursive ios/FairEdge/FairEdge/; else echo "⚠️ swift-format not installed, skipping"; fi']
        language: system
        files: '\.swift$'
        
  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: [--line-length=100]
        
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --ignore=E203,W503]
        
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # Security and quality checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [--severity-level=medium, --skip=B101]
        
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable 